
#log4j.rootLogger ，此处也可以使用log4j.rootCategory，rootLogger是rootCategory的子类，现在已经不建议使用rootCatetory了。
#作用：指定日志的输出级别和输出目的地，如，debug,sdtout,file
# 其中debug  指定日志的输出界别，log4j一共定义了9中日志级别，由高到低为：off、fatal、error、warn、info、debug、all 推荐使用其中的四种级别：error、warn、info、debug，
# sdtout、file 指定的是日志输出的位置
#  sdtout 对应  《sdtout 配置》
#  file 对应  《file 配置》

log4j.debug = true

log4j.rootLogger=DEBUG, file, stdout
#log4j.rootCategory=DEBUG, file, stdout




#  《sdtout 配置》
# 指定sdtout的输出使用的是ConsoleAppender类，即输出到控制台
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
#  指定  输出的布局   org.apache.log4j.HTMLLayout（以HTML表格形式布局）、org.apache.log4j.PatternLayout（可以灵活地指定布局模式） 、org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串） 、org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# 指定   输出的日志格式
log4j.appender.stdout.layout.ConversionPattern=%d-[TS] %p %t %c - %m%n





# 《file 配置》
# DailyRollingFileAppender 每天产生一个日志文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
# 文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.file=org.apache.log4j.RollingFileAppender

# 指定 日志文件存储位置
log4j.appender.file.File=target/goat.log

#按日期生成日志日期格式 (在‘.log’前加上日期)  sos 明天才会生成tomcat.log.2010-9-9 今天的日志不会跟日期作为后缀的
log4j.appender.file.DatePattern='.'yyyy-MM-dd-HH
log4j.appender.file.layout=org.apache.log4j.PatternLayout
# 文件日志输出的样式布局
log4j.appender.file.layout.ConversionPattern=%d-[TS] %p %t %c - %m%n

